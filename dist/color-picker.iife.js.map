{"version":3,"file":"color-picker.iife.js","sources":["../src/utils/parseHTML.js","../src/defaults.js","../src/utils/convertColors.js","../src/templates.js","../src/events.js","../src/history.js","../src/swatches.js","../src/color-picker.js","../src/utils/isObject.js"],"sourcesContent":["export default (str) => {\n  var parser = new DOMParser(),\n      node   = parser.parseFromString(str.trim(), \"text/html\")\n\n  return node.body.firstElementChild\n}","export default {\n  color: 'white',\n  onInput: _=>_,\n  onChange: _=>_,\n  buttons: {\n    undo: {\n      icon: '&curvearrowleft;',\n      title: 'Undo'\n    },\n    format: {\n      icon: '&leftrightarrows;',\n      title: 'Switch Color Format'\n    },\n    add: {\n      icon: '+',\n      title: 'Add to Swatches'\n    }\n  }\n}","// Based on:\n// https://github.com/kohrongying/hex-to-rgba/blob/master/src/helpers.js\n\nexport const CSStoHEX = hex => hex.match(/\\w\\w/g)\nexport const CSStoRGBA = rgba => rgba.match(/\\((.*)\\)/)[1].split(',').map(Number)\nexport const CSStoHSLA = hsla => Object.assign([0,0,0,1], hsla.match(/\\((.*)\\)/)[1].split(',').map((v,i) => i != 3 ? parseFloat(v) : v.includes('%') ? parseFloat(v) : parseFloat(v)*100 ))\nexport const HSLAtoCSS = hsla => `hsla(${hsla.h}, ${hsla.s}%, ${hsla.l}%, ${hsla.a}%)`\n\nconst roundNumber = number => number.toFixed(1).replace('.0', '')\n\nexport const hex_rgba = hex => {\n  const [rr, gg, bb, aa] = CSStoHEX(hex),\n        [r,g,b] = [rr,gg,bb].map(v => parseInt(v, 16)),\n        alpha = aa ? (parseInt(aa, 16) / 255).toFixed(2) : 1\n  return `rgba(${r},${g},${b},${alpha})`\n}\n\nexport const any_to_hex = str => {\n  var ctx = document.createElement(\"canvas\").getContext(\"2d\"),\n      output;\n\n\tctx.fillStyle = str\n\toutput = ctx.fillStyle\n\n  return output[0] == '#' ? output : rgba_hex(output)\n}\n\nexport const rgba_hex = rgba => {\n  const [r,g,b,a] = CSStoRGBA(rgba),\n        hex = \"#\" + [r,g,b].map(v => v.toString(16).padStart(2, '0')).join('')\n  return rgba.length == 3 ? hex : hex + Math.round(a * 255).toString(16).padStart(2, '0')\n}\n\nexport const rgba_hsla = rgba => {\n  let [r,g,b,a] = CSStoRGBA(rgba)\n\n  r = r / 255\n  g = g / 255\n  b = b / 255\n\n  let max = Math.max(r, g, b),\n      min = Math.min(r, g, b),\n      d = max - min,\n\n      h = 0,\n      s = 0,\n      l = ((max + min) / 2).toPrecision(5)\n\n  if (d){\n    s = l > 0.5\n      ? d / (2 - max - min)\n      : d / (max + min)\n\n    h = max == r\n      ? (g - b) / d + (g < b ? 6 : 0)\n      : max == g\n        ? h = (b - r) / d + 2\n        : h = (r - g) / d + 4\n\n    h /= 6\n  }\n\n  return {\n    h: roundNumber(h * 360),\n    s: roundNumber(s * 100),\n    l: roundNumber(l * 100),\n    a: roundNumber(a * 100)\n  }\n}\n\nexport const hexToHsl = hex => rgba_hsla( hex_rgba(hex) )\n\n/**\n * converts any color format to anoter\n * @param {String} color\n * @param {String} format ['hex', 'rgba', 'hsla']\n * @returns a color in another format\n */\nexport const changeColorFormat = (color, format) => {\n  format = (format+\"\").toLowerCase()\n  color = any_to_hex(color)\n\n  return format == 'hex'\n      ? color\n      : format.startsWith('hsl')\n        ? HSLAtoCSS( rgba_hsla( hex_rgba(color) ) )\n        : format.startsWith('rgb')\n          ? hex_rgba(color)\n          : color\n}\n","import { any_to_hex, HSLAtoCSS } from './utils/convertColors'\n\nexport function scope() {\n  const {h,s,l,a} = this.color\n  const className = `color-picker ${this.settings.className||''}`.trim()\n\n  return `\n    <div class='${className}'>\n      ${slider({ name:\"hue\", value:h, max:\"360\" })}\n      ${slider({ name:\"saturation\", value:s })}\n      ${slider({ name:\"lightness\", value:l })}\n      ${slider({ name:\"alpha\", value:a })}\n      <output></output>\n      ${value.call(this, this.color)}\n      ${this.swatches ? swatches.call(this, this.swatches, this.initialSwatches) : ''}\n    </div>\n  `\n}\n\nexport function slider({ name, min = 0, max = 100, value }){\n  return `<div class=\"range color-picker__${name}\" title=\"${name}\" style=\"--min:${min}; --max:${max};\">\n            <input type=\"range\" name=\"${name}\" value=\"${value}\" min=\"${min}\" max=\"${max}\">\n            <output></output>\n            <div class='range__progress'></div>\n          </div>`\n}\n\nexport function value( color ){\n  const { buttons:{undo, format} } = this.settings\n\n  return `\n    <div class='color-picker__value cp-checkboard'>\n      <input name='value' inputmode='decimal' placeholder='CSS Color' value='${any_to_hex(HSLAtoCSS(color))}'>\n      <button title='${undo.title}' name=\"undo\">${undo.icon}</button>\n      <button title='${format.title}' name='format'>${format.icon}</button>\n      <div></div>\n    </div>\n  `\n}\n\nexport function swatches(swatches, initialSwatches){\n  const { buttons:{add} } = this.settings\n\n  return `\n    <div class='color-picker__swatches' style='--initial-len:${initialSwatches.length}'>\n      <button name='addSwatch' title='${add.title}'>${add.icon}</button>\n      ${swatches.map(color => swatch(color, initialSwatches.includes(color))).join('')}\n    </div>\n  `\n}\n\nexport function swatch(color, isLocked){\n  return `<div class=\"cp-checkboard color-picker__swatch\" title=\"${color}\" style=\"--c:${color}\">${isLocked ? '' : '<button name=\"removeSwatch\">&times;</button>'}</div>`\n}\n\n","export function bindEvents(){\n  [\n    ['scope', 'input' , onInput],\n    ['scope', 'change', onRangeChange],\n    ['scope', 'click' , onButtonClick],\n    ['scope', 'wheel' , onWheelMove],\n    ['value', 'change', onValueChange],\n  ].forEach(([elm, event, cb]) =>\n    this.DOM[elm].addEventListener(event,  cb.bind(this), {pasive:false})\n  )\n\n  // bind storage event listener because all color pickers are connected,\n  // so if one save or remove a color the change will reflect in all others\n  window.addEventListener('storage', onStorage.bind(this))\n\n  // assuming picker uses as a popup\n  if( this.settings.onClickOutside ){\n    document.body.addEventListener('click', onClickOutside.bind(this))\n    window.addEventListener('keydown', onkeydown.bind(this))\n  }\n}\n\nfunction onStorage(){\n  this.syncGlobalSwatchesWithLocal()\n}\n\nfunction onWheelMove(e){\n  // disable window scroll: https://stackoverflow.com/a/23606063/104380\n  e.preventDefault()\n\n  const { value, max } = e.target,\n        delta = Math.sign(e.deltaY) * -1 // normalize jump value to either -1 or 1\n\n  // since the event is on the window object, the callback will be fired in all\n  // instances, therefore only the currently \"active\" picker should be used.\n  if( value && max ){\n    e.target.value = Math.min(Math.max(+value + delta, 0), +max)\n    onInput.call(this, e)\n  }\n}\n\nfunction onkeydown(e){\n  if( e.key == 'Escape' )\n    this.settings.onClickOutside(e)\n}\n\nfunction onClickOutside(e){\n  if( !this.DOM.scope.contains(e.target) )\n    this.settings.onClickOutside(e)\n}\n\nfunction onInput(e){\n  const {name, value, type} = e.target\n\n  if( type == 'range' ){\n    this.setColor({...this.color, [name[0]]: +value})\n  }\n}\n\nfunction onRangeChange(e){\n  const { type } = e.target\n\n  if( type == 'range' || type == 'text' ){\n    this.history.last = this.color\n  }\n}\n\nfunction onValueChange(e){\n  this.setColor( this.getHSLA(e.target.value) )\n  this.DOM.value.blur()\n}\n\nfunction onButtonClick(e){\n  const { name, parentNode:pNode, classList, title } = e.target\n\n  // switch(name){\n  //   case\n  // }\n  if( name == 'format' )\n    this.switchFormat()\n\n  else if( name == 'undo' )\n    this.history.undo()\n\n  else if( name == 'addSwatch' )\n    this.addSwatch()\n\n  else if( name == 'removeSwatch' )\n    this.removeSwatch(pNode, pNode.title)\n\n  else if( classList.contains('color-picker__swatch') && title ){\n    this.setColor( this.getHSLA(title) )\n    this.history.last = this.color\n  }\n}","/**\n * Changes history manager\n */\nexport default function history(){\n  const historyChange = () => this.settings.onChange(this.CSSColor)\n  const setColor = this.setColor.bind(this)\n\n  return {\n    _value: [this.color],\n\n    get pop(){\n      return this._value.pop()\n    },\n\n    get previous(){\n      return this._value[this._value.length - 2]\n    },\n\n    set last( item ){\n      this._value.push(item)\n      historyChange()\n    },\n\n    undo(){\n      // leave one last item in the value array\n      if( this._value.length > 1 ){\n        // get rid of the current color\n        this.pop\n\n        // get \"new\" last color\n        let last = this._value[this._value.length - 1]\n\n        setColor(last)\n        historyChange()\n\n        return last\n      }\n    }\n  }\n}","import parseHTML from './utils/parseHTML'\nimport { any_to_hex } from './utils/convertColors'\n\nconst swatchesIncludes = (swatches, color) => swatches.some(swatch => any_to_hex(swatch) == any_to_hex(color))\n\nconst storeKey = '@yaireo/color-picker/swatches'\n\nexport function getSetGlobalSwatches(data){\n  // if \"swatchesLocalStorage\" is \"false\", do not save to localstorage\n  const _store = this.settings.swatchesLocalStorage,\n        customKey = typeof _store == 'string' ? _store : '';\n\n  if ( _store && data ){\n    localStorage.setItem(storeKey + customKey, data.join(';'))\n    dispatchEvent( new Event('storage') )\n  }\n\n  // \"filter(String)\" clean up any empty strings\n  return localStorage[storeKey + customKey]?.split(';').filter(String) || []\n}\n\n// sync instance swatches with global ones. skip duplicates\nexport function syncGlobalSwatchesWithLocal(){\n  this.sharedSwatches = this.getSetGlobalSwatches()\n  this.swatches = this.sharedSwatches.concat(this.initialSwatches)\n\n  // reflect swatches change in the DOM (add/remove)\n  // a delay is needed becasue the whole \"swatches\" element is replaced completely\n  // if if done immediately, there will be no time for animations (add/remove) and also\n  // a \"click outside\" event will be registered\n  this.DOM.swatches && setTimeout(()=>{\n    const template = parseHTML(this.templates.swatches.call(this, this.swatches, this.initialSwatches))\n    this.DOM.swatches.replaceWith(template)\n    this.DOM.swatches = template\n  }, 500)\n}\n\nexport function addSwatch( color = this.CSSColor ){\n  // if already exist, abort\n  if( swatchesIncludes(this.swatches, color) ) return\n\n  // add DOM swatch node\n  const swatchElm = parseHTML( this.templates.swatch(color) )\n  swatchElm.classList.add('cp_remove')\n  this.DOM.swatches.prepend(swatchElm)\n  setTimeout(() => swatchElm.classList.remove('cp_remove'), 0)\n\n  // save swatch to instance state\n  this.swatches.unshift(color)\n  this.sharedSwatches.unshift(color)\n\n  // sync localstorage\n  this.getSetGlobalSwatches(this.sharedSwatches)\n}\n\nexport function removeSwatch( swatchElm, color ){\n  swatchElm.classList.add('cp_remove')\n  setTimeout(() => swatchElm.remove(), 200)\n\n  const notColor = swatch => swatch != color\n\n  this.swatches = this.swatches.filter(notColor)\n  this.sharedSwatches = this.sharedSwatches.filter(notColor)\n\n  // sync localstorage\n  this.getSetGlobalSwatches(this.sharedSwatches)\n}\n","import parseHTML from './utils/parseHTML'\nimport DEFAULTS from './defaults'\nimport * as templates from './templates'\nimport * as events from './events'\nimport history from './history'\nimport * as swatches from './swatches'\nimport isObject from './utils/isObject'\nimport {any_to_hex, hex_rgba, rgba_hsla, CSStoHSLA, HSLAtoCSS, changeColorFormat} from './utils/convertColors'\n\nvar raf = window.requestAnimationFrame || (cb => window.setTimeout(cb, 1000 / 60))\n\nfunction ColorPicker(settings){\n  this.settings = Object.assign({}, DEFAULTS, settings)\n\n  const {color, defaultFormat, swatches} = this.settings\n\n  this.DOM = {}\n\n  this.sharedSwatches = this.getSetGlobalSwatches() // only this gets syncs with the localstorage (if chosen to)\n  this.initialSwatches = swatches || []\n  this.swatches = swatches && this.sharedSwatches.concat(this.initialSwatches) // global (shared) via localstorage\n  this.color = changeColorFormat(color, defaultFormat)\n  this.history = history.call(this)\n  this.init()\n}\n\nColorPicker.prototype = {\n  templates,\n  ...swatches,\n  ...events,\n\n  getColorFormat( color ){\n    return color[0] == '#'\n        ? 'hex'\n        : !color.indexOf('hsl')\n          ? 'hsla'\n          : !color.indexOf('rgb')\n            ? 'rgba'\n            : ''\n  },\n\n  /**\n   * normalizes any color to HSLA-Object\n   * @param {String} color\n   */\n  getHSLA( color ){\n    let result\n\n    if( !color ) return\n\n    // if color argument is already an HSLA object, return it as-is\n    if( isObject(color) && Object.keys(color).join('').startsWith('hsl'))\n      return color\n\n    this.colorFormat = this.getColorFormat(color)\n\n    if( !color.indexOf('hsla') ){\n      result = CSStoHSLA(color)\n      result = { h:result[0], s:result[1], l:result[2], a:result[3] }\n    }\n\n    else{\n      color = any_to_hex(color)\n      color = hex_rgba(color)\n      result = rgba_hsla(color)\n    }\n\n    return result\n  },\n\n  switchFormat(){\n    const _cf = this.colorFormat\n\n    switch( _cf ){\n      case '':\n      case 'hex':\n        this.colorFormat = 'rgba'\n        break\n      case 'rgba':\n        this.colorFormat = 'hsla'\n        break\n      case 'hsla':\n        this.colorFormat = 'hex'\n        break\n    }\n\n    // get a new \"this.CSSColor\" after changing the format above\n    this.setCSSColor()\n    this.DOM.value.value = this.CSSColor\n  },\n\n  updateRangeSlider(name, value){\n    const elm = this.DOM.scope.querySelector(`input[name=\"${name}\"]`)\n\n    if( !elm ) return\n\n    elm.value = value\n    elm.parentNode.style.setProperty('--value', value)\n    elm.parentNode.style.setProperty('--text-value', JSON.stringify(\"\"+Math.round(value)))\n\n    this.updateCSSVar(name, value)\n  },\n\n  /**\n   * sets the CSS color text-value according to the current format\n   */\n  setCSSColor(){\n    this.CSSColor = any_to_hex( HSLAtoCSS(this.color) )\n\n    if( this.colorFormat == 'rgba' )\n      this.CSSColor = hex_rgba(this.CSSColor)\n\n    else if( this.colorFormat == 'hsla' )\n      this.CSSColor = HSLAtoCSS(this.color)\n\n    this.DOM.scope && this.DOM.scope.setAttribute(\"data-color-format\", this.colorFormat)\n    this.settings.onInput(this.CSSColor)\n  },\n\n  /**\n   *\n   * @param {Object} hsla {h,s,l,a}\n   */\n  setColor( value ){\n    if( !value ) return\n\n    value = this.getHSLA(value)\n\n    this.color = value\n    this.setCSSColor()\n    this.DOM.scope && this.updateAllCSSVars()\n\n    if( this.DOM.value  )\n      this.DOM.value.value = this.CSSColor\n  },\n\n  updateCSSVar(name, value){\n    // this.DOM.value\n    this.DOM.scope.style.setProperty(`--${name}`, value)\n  },\n\n  updateAllCSSVars(){\n    const hsla = this.NamedHSLA(this.color)\n    Object.entries(hsla).forEach(([k, v]) => {\n      this.updateRangeSlider(k, v)\n    })\n  },\n\n  NamedHSLA( hsla ){\n    return {\n      \"hue\"        : hsla.h,\n      \"saturation\" : hsla.s,\n      \"lightness\"  : hsla.l,\n      \"alpha\"      : hsla.a\n    }\n  },\n\n  build(){\n    const template = this.templates.scope.call(this)\n    this.DOM.scope = parseHTML(template)\n    this.DOM.value = this.DOM.scope.querySelector('input[name=\"value\"]')\n    this.DOM.swatches = this.DOM.scope.querySelector('.color-picker__swatches')\n  },\n\n  init(){\n    this.build()\n    this.setColor(this.color)\n    // this.updateAllCSSVars()\n    this.bindEvents()\n  }\n}\n\nexport { any_to_hex, hex_rgba, rgba_hsla, CSStoHSLA, HSLAtoCSS, changeColorFormat }\n\nexport default ColorPicker","export default function isObject(obj) {\n  return (obj+\"\") === \"[object Object]\"\n}\n"],"names":["parseHTML","str","DOMParser","parseFromString","trim","body","firstElementChild","DEFAULTS","color","onInput","_","onChange","buttons","undo","icon","title","format","add","CSStoRGBA","rgba","match","split","map","Number","CSStoHSLA","hsla","Object","assign","v","i","includes","parseFloat","HSLAtoCSS","h","s","l","a","roundNumber","number","toFixed","replace","hex_rgba","hex","rr","gg","bb","aa","CSStoHEX","r","g","b","parseInt","any_to_hex","output","ctx","document","createElement","getContext","fillStyle","rgba_hex","toString","padStart","join","length","Math","round","rgba_hsla","max","min","d","toPrecision","changeColorFormat","toLowerCase","startsWith","slider","name","value","this","settings","swatches","initialSwatches","swatch","isLocked","className","call","onStorage","syncGlobalSwatchesWithLocal","onWheelMove","e","preventDefault","target","delta","sign","deltaY","onkeydown","key","onClickOutside","DOM","scope","contains","type","setColor","onRangeChange","history","last","onValueChange","getHSLA","blur","onButtonClick","parentNode","pNode","classList","switchFormat","addSwatch","removeSwatch","forEach","elm","event","cb","addEventListener","bind","pasive","window","historyChange","CSSColor","_value","pop","previous","item","push","storeKey","swatchesIncludes","some","swatchElm","templates","prepend","setTimeout","remove","unshift","sharedSwatches","getSetGlobalSwatches","data","_store","swatchesLocalStorage","customKey","localStorage","setItem","dispatchEvent","Event","filter","String","notColor","concat","template","replaceWith","ColorPicker","defaultFormat","init","prototype","events","getColorFormat","indexOf","result","keys","colorFormat","setCSSColor","updateRangeSlider","querySelector","style","setProperty","JSON","stringify","updateCSSVar","setAttribute","updateAllCSSVars","NamedHSLA","entries","k","hue","saturation","lightness","alpha","build","bindEvents"],"mappings":"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"}